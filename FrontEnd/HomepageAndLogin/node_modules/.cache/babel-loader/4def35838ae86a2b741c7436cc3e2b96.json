{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/connormentel/Desktop/CS 5500/Project/homepage/src/loginpage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer, useEffect } from 'react';\nimport { createStyles, makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Button from '@material-ui/core/Button';\nconst useStyles = makeStyles(theme => createStyles({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    width: 500,\n    margin: `${theme.spacing(0)} auto`\n  },\n  loginBtn: {\n    marginTop: theme.spacing(2),\n    flexGrow: 1\n  },\n  header: {\n    textAlign: 'center',\n    background: '#131c9c',\n    color: '#fff'\n  },\n  card: {\n    marginTop: theme.spacing(10)\n  }\n}));\nconst initialState = {\n  username: '',\n  password: '',\n  isButtonDisabled: true,\n  helperText: '',\n  isError: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'setUsername':\n      return { ...state,\n        username: action.payload\n      };\n\n    case 'setPassword':\n      return { ...state,\n        password: action.payload\n      };\n\n    case 'setIsButtonDisabled':\n      return { ...state,\n        isButtonDisabled: action.payload\n      };\n\n    case 'loginSuccess':\n      return { ...state,\n        helperText: action.payload,\n        isError: false\n      };\n\n    case 'loginFailed':\n      return { ...state,\n        helperText: action.payload,\n        isError: true\n      };\n\n    case 'setIsError':\n      return { ...state,\n        isError: action.payload\n      };\n  }\n};\n\nconst Login = () => {\n  _s();\n\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  useEffect(() => {\n    if (state.username.trim() && state.password.trim()) {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: false\n      });\n    } else {\n      dispatch({\n        type: 'setIsButtonDisabled',\n        payload: true\n      });\n    }\n  }, [state.username, state.password]);\n\n  const handleLogin = () => {\n    if (state.username === 'steve@email.com' && state.password === 'minecraft') {\n      dispatch({\n        type: 'loginSuccess',\n        payload: 'SUCCESS'\n      });\n    } else {\n      dispatch({\n        type: 'loginFailed',\n        payload: 'Incorrect username or password'\n      });\n    }\n  };\n\n  const handleKeyPress = event => {\n    if (event.keyCode === 13 || event.which === 13) {\n      state.isButtonDisabled || handleLogin();\n    }\n  };\n\n  const handleUsernameChange = event => {\n    dispatch({\n      type: 'setUsername',\n      payload: event.target.value\n    });\n  };\n\n  const handlePasswordChange = event => {\n    dispatch({\n      type: 'setPassword',\n      payload: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: classes.header,\n        title: \"Minecraft Steve's Plagiarism Detector\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"username = steve@email.com password = minecraft\", /*#__PURE__*/_jsxDEV(TextField, {\n            error: state.isError,\n            fullWidth: true,\n            id: \"username\",\n            type: \"email\",\n            label: \"Username\",\n            placeholder: \"Username\",\n            margin: \"normal\",\n            onChange: handleUsernameChange,\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            error: state.isError,\n            fullWidth: true,\n            id: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            placeholder: \"Password\",\n            margin: \"normal\",\n            helperText: state.helperText,\n            onChange: handlePasswordChange,\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          color: \"secondary\",\n          className: classes.loginBtn,\n          onClick: handleLogin,\n          disabled: state.isButtonDisabled,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"l/48ceYlY8jGaCSDvsMjpNWljWY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/connormentel/Desktop/CS 5500/Project/homepage/src/loginpage.tsx"],"names":["React","useReducer","useEffect","createStyles","makeStyles","TextField","Card","CardContent","CardActions","CardHeader","Button","useStyles","theme","container","display","flexWrap","width","margin","spacing","loginBtn","marginTop","flexGrow","header","textAlign","background","color","card","initialState","username","password","isButtonDisabled","helperText","isError","reducer","state","action","type","payload","Login","classes","dispatch","trim","handleLogin","handleKeyPress","event","keyCode","which","handleUsernameChange","target","value","handlePasswordChange"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,YAAR,EAAsBC,UAAtB,QAA8C,0BAA9C;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,IACzBT,YAAY,CAAC;AACTU,EAAAA,SAAS,EAAE;AACPC,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,QAAQ,EAAE,MAFH;AAGPC,IAAAA,KAAK,EAAE,GAHA;AAIPC,IAAAA,MAAM,EAAG,GAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CAAiB;AAJrB,GADF;AAOTC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,EAAER,KAAK,CAACM,OAAN,CAAc,CAAd,CADL;AAENG,IAAAA,QAAQ,EAAE;AAFJ,GAPD;AAWTC,EAAAA,MAAM,EAAE;AACJC,IAAAA,SAAS,EAAE,QADP;AAEJC,IAAAA,UAAU,EAAE,SAFR;AAGJC,IAAAA,KAAK,EAAE;AAHH,GAXC;AAgBTC,EAAAA,IAAI,EAAE;AACFN,IAAAA,SAAS,EAAER,KAAK,CAACM,OAAN,CAAc,EAAd;AADT;AAhBG,CAAD,CADY,CAA5B;AAgCA,MAAMS,YAAmB,GAAG;AACxBC,EAAAA,QAAQ,EAAE,EADc;AAExBC,EAAAA,QAAQ,EAAE,EAFc;AAGxBC,EAAAA,gBAAgB,EAAE,IAHM;AAIxBC,EAAAA,UAAU,EAAE,EAJY;AAKxBC,EAAAA,OAAO,EAAE;AALe,CAA5B;;AAeA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAeC,MAAf,KAAyC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,aAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHN,QAAAA,QAAQ,EAAEO,MAAM,CAACE;AAFd,OAAP;;AAIJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHL,QAAAA,QAAQ,EAAEM,MAAM,CAACE;AAFd,OAAP;;AAIJ,SAAK,qBAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,gBAAgB,EAAEK,MAAM,CAACE;AAFtB,OAAP;;AAIJ,SAAK,cAAL;AACI,aAAO,EACH,GAAGH,KADA;AAEHH,QAAAA,UAAU,EAAEI,MAAM,CAACE,OAFhB;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAK,aAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHH,QAAAA,UAAU,EAAEI,MAAM,CAACE,OAFhB;AAGHL,QAAAA,OAAO,EAAE;AAHN,OAAP;;AAKJ,SAAK,YAAL;AACI,aAAO,EACH,GAAGE,KADA;AAEHF,QAAAA,OAAO,EAAEG,MAAM,CAACE;AAFb,OAAP;AA7BR;AAkCH,CAnCD;;AAqCA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAChB,QAAMC,OAAO,GAAG5B,SAAS,EAAzB;AACA,QAAM,CAACuB,KAAD,EAAQM,QAAR,IAAoBvC,UAAU,CAACgC,OAAD,EAAUN,YAAV,CAApC;AAEAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIgC,KAAK,CAACN,QAAN,CAAea,IAAf,MAAyBP,KAAK,CAACL,QAAN,CAAeY,IAAf,EAA7B,EAAoD;AAChDD,MAAAA,QAAQ,CAAC;AACLJ,QAAAA,IAAI,EAAE,qBADD;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH,KALD,MAKO;AACHG,MAAAA,QAAQ,CAAC;AACLJ,QAAAA,IAAI,EAAE,qBADD;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH;AACJ,GAZQ,EAYN,CAACH,KAAK,CAACN,QAAP,EAAiBM,KAAK,CAACL,QAAvB,CAZM,CAAT;;AAcA,QAAMa,WAAW,GAAG,MAAM;AACtB,QAAIR,KAAK,CAACN,QAAN,KAAmB,iBAAnB,IAAwCM,KAAK,CAACL,QAAN,KAAmB,WAA/D,EAA4E;AACxEW,MAAAA,QAAQ,CAAC;AACLJ,QAAAA,IAAI,EAAE,cADD;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAKH,KAND,MAMO;AACHG,MAAAA,QAAQ,CAAC;AACLJ,QAAAA,IAAI,EAAE,aADD;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIH;AACJ,GAbD;;AAeA,QAAMM,cAAc,GAAIC,KAAD,IAAgC;AACnD,QAAIA,KAAK,CAACC,OAAN,KAAkB,EAAlB,IAAwBD,KAAK,CAACE,KAAN,KAAgB,EAA5C,EAAgD;AAC5CZ,MAAAA,KAAK,CAACJ,gBAAN,IAA0BY,WAAW,EAArC;AACH;AACJ,GAJD;;AAMA,QAAMK,oBAAgE,GAAIH,KAAD,IAAW;AAChFJ,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAEO,KAAK,CAACI,MAAN,CAAaC;AAFjB,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMC,oBAAgE,GAAIN,KAAD,IAAW;AAChFJ,IAAAA,QAAQ,CAAC;AACLJ,MAAAA,IAAI,EAAE,aADD;AAELC,MAAAA,OAAO,EAAEO,KAAK,CAACI,MAAN,CAAaC;AAFjB,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI;AAAM,IAAA,SAAS,EAAEV,OAAO,CAAC1B,SAAzB;AAAoC,IAAA,UAAU,MAA9C;AAA+C,IAAA,YAAY,EAAC,KAA5D;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE0B,OAAO,CAACb,IAAzB;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEa,OAAO,CAACjB,MAA/B;AAAuC,QAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAA,+BACI;AAAA,qFAGI,QAAC,SAAD;AACI,YAAA,KAAK,EAAEY,KAAK,CAACF,OADjB;AAEI,YAAA,SAAS,MAFb;AAGI,YAAA,EAAE,EAAC,UAHP;AAII,YAAA,IAAI,EAAC,OAJT;AAKI,YAAA,KAAK,EAAC,UALV;AAMI,YAAA,WAAW,EAAC,UANhB;AAOI,YAAA,MAAM,EAAC,QAPX;AAQI,YAAA,QAAQ,EAAEe,oBARd;AASI,YAAA,UAAU,EAAEJ;AAThB;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAcI,QAAC,SAAD;AACI,YAAA,KAAK,EAAET,KAAK,CAACF,OADjB;AAEI,YAAA,SAAS,MAFb;AAGI,YAAA,EAAE,EAAC,UAHP;AAII,YAAA,IAAI,EAAC,UAJT;AAKI,YAAA,KAAK,EAAC,UALV;AAMI,YAAA,WAAW,EAAC,UANhB;AAOI,YAAA,MAAM,EAAC,QAPX;AAQI,YAAA,UAAU,EAAEE,KAAK,CAACH,UARtB;AASI,YAAA,QAAQ,EAAEmB,oBATd;AAUI,YAAA,UAAU,EAAEP;AAVhB;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eA+BI,QAAC,WAAD;AAAA,+BACI,QAAC,MAAD;AACI,UAAA,OAAO,EAAC,WADZ;AAEI,UAAA,IAAI,EAAC,OAFT;AAGI,UAAA,KAAK,EAAC,WAHV;AAII,UAAA,SAAS,EAAEJ,OAAO,CAACpB,QAJvB;AAKI,UAAA,OAAO,EAAEuB,WALb;AAMI,UAAA,QAAQ,EAAER,KAAK,CAACJ,gBANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+CH,CApGD;;GAAMQ,K;UACc3B,S;;;KADd2B,K;AAsGN,eAAeA,KAAf","sourcesContent":["import React, {useReducer, useEffect} from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: 500,\n            margin: `${theme.spacing(0)} auto`\n        },\n        loginBtn: {\n            marginTop: theme.spacing(2),\n            flexGrow: 1\n        },\n        header: {\n            textAlign: 'center',\n            background: '#131c9c',\n            color: '#fff'\n        },\n        card: {\n            marginTop: theme.spacing(10)\n        }\n    })\n);\n\n\ntype State = {\n    username: string\n    password: string\n    isButtonDisabled: boolean\n    helperText: string\n    isError: boolean\n};\n\nconst initialState: State = {\n    username: '',\n    password: '',\n    isButtonDisabled: true,\n    helperText: '',\n    isError: false\n};\n\ntype Action = { type: 'setUsername', payload: string }\n    | { type: 'setPassword', payload: string }\n    | { type: 'setIsButtonDisabled', payload: boolean }\n    | { type: 'loginSuccess', payload: string }\n    | { type: 'loginFailed', payload: string }\n    | { type: 'setIsError', payload: boolean };\n\nconst reducer = (state: State, action: Action): State => {\n    switch (action.type) {\n        case 'setUsername':\n            return {\n                ...state,\n                username: action.payload\n            };\n        case 'setPassword':\n            return {\n                ...state,\n                password: action.payload\n            };\n        case 'setIsButtonDisabled':\n            return {\n                ...state,\n                isButtonDisabled: action.payload\n            };\n        case 'loginSuccess':\n            return {\n                ...state,\n                helperText: action.payload,\n                isError: false\n            };\n        case 'loginFailed':\n            return {\n                ...state,\n                helperText: action.payload,\n                isError: true\n            };\n        case 'setIsError':\n            return {\n                ...state,\n                isError: action.payload\n            };\n    }\n}\n\nconst Login = () => {\n    const classes = useStyles();\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n        if (state.username.trim() && state.password.trim()) {\n            dispatch({\n                type: 'setIsButtonDisabled',\n                payload: false\n            });\n        } else {\n            dispatch({\n                type: 'setIsButtonDisabled',\n                payload: true\n            });\n        }\n    }, [state.username, state.password]);\n\n    const handleLogin = () => {\n        if (state.username === 'steve@email.com' && state.password === 'minecraft') {\n            dispatch({\n                type: 'loginSuccess',\n                payload: 'SUCCESS'\n\n            });\n        } else {\n            dispatch({\n                type: 'loginFailed',\n                payload: 'Incorrect username or password'\n            });\n        }\n    };\n\n    const handleKeyPress = (event: React.KeyboardEvent) => {\n        if (event.keyCode === 13 || event.which === 13) {\n            state.isButtonDisabled || handleLogin();\n        }\n    };\n\n    const handleUsernameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        dispatch({\n            type: 'setUsername',\n            payload: event.target.value\n        });\n    };\n\n    const handlePasswordChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        dispatch({\n            type: 'setPassword',\n            payload: event.target.value\n        });\n    };\n\n    return (\n        <form className={classes.container} noValidate autoComplete=\"off\">\n            <Card className={classes.card}>\n                <CardHeader className={classes.header} title=\"Minecraft Steve's Plagiarism Detector\"/>\n                <CardContent>\n                    <div>\n                        username = steve@email.com\n                        password = minecraft\n                        <TextField\n                            error={state.isError}\n                            fullWidth\n                            id=\"username\"\n                            type=\"email\"\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            margin=\"normal\"\n                            onChange={handleUsernameChange}\n                            onKeyPress={handleKeyPress}\n                        />\n                        <TextField\n                            error={state.isError}\n                            fullWidth\n                            id=\"password\"\n                            type=\"password\"\n                            label=\"Password\"\n                            placeholder=\"Password\"\n                            margin=\"normal\"\n                            helperText={state.helperText}\n                            onChange={handlePasswordChange}\n                            onKeyPress={handleKeyPress}\n                        />\n                    </div>\n                </CardContent>\n                <CardActions>\n                    <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"secondary\"\n                        className={classes.loginBtn}\n                        onClick={handleLogin}\n                        disabled={state.isButtonDisabled}>\n                        Login\n                    </Button>\n                </CardActions>\n            </Card>\n        </form>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}