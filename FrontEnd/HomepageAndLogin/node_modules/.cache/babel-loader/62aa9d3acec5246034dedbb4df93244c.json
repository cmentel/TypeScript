{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/connormentel/Desktop/CS 5500/Project/homepage/src/loginpage.tsx\";\nimport { Button, Form, Layout, Menu } from 'antd';\nimport React from \"react\";\nimport Login from 'ant-design-pro/lib';\nimport { Checkbox } from 'antd';\nconst {\n  Tab,\n  UserName,\n  Password,\n  Mobile,\n  Captcha,\n  Submit\n} = Login;\nconst {\n  Header,\n  Content,\n  Footer,\n  Sider\n} = Layout;\nconst {\n  SubMenu\n} = Menu;\n/**\n * Class to represent the login page\n */\n\nexport default class Loginpage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notice: '',\n      type: 'tab2',\n      autoLogin: true\n    };\n\n    this.onSubmit = (err, values) => {\n      console.log('value collected ->', { ...values,\n        autoLogin: this.state.autoLogin\n      });\n\n      if (this.state.type === 'tab1') {\n        this.setState({\n          notice: ''\n        }, () => {\n          if (!err && (values.username !== 'admin' || values.password !== '888888')) {\n            setTimeout(() => {\n              this.setState({\n                notice: 'The combination of username and password is incorrect!'\n              });\n            }, 500);\n          }\n        });\n      }\n    };\n\n    this.onTabChange = key => {\n      this.setState({\n        type: key\n      });\n    };\n\n    this.changeAutoLogin = e => {\n      this.setState({\n        autoLogin: e.target.checked\n      });\n    };\n  }\n\n  /**\n   * Overriding Render function\n   */\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, { ...layout,\n      name: \"basic\",\n      initialValues: {\n        remember: true\n      },\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Username\",\n        name: \"username\",\n        rules: [{\n          required: true,\n          message: 'Please input your username!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"Password\",\n        name: \"password\",\n        rules: [{\n          required: true,\n          message: 'Please input your password!'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n        name: \"remember\",\n        valuePropName: \"checked\",\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          children: \"Remember me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailLayout,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/connormentel/Desktop/CS 5500/Project/homepage/src/loginpage.tsx"],"names":["Button","Form","Layout","Menu","React","Login","Checkbox","Tab","UserName","Password","Mobile","Captcha","Submit","Header","Content","Footer","Sider","SubMenu","Loginpage","Component","state","notice","type","autoLogin","onSubmit","err","values","console","log","setState","username","password","setTimeout","onTabChange","key","changeAutoLogin","e","target","checked","render","layout","remember","onFinish","onFinishFailed","required","message","tailLayout"],"mappings":"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","sourcesContent":["import {Button, Form, Layout, Menu} from 'antd';\nimport React from \"react\";\nimport Login from 'ant-design-pro/lib';\nimport {Alert, Checkbox} from 'antd';\n\nconst {Tab, UserName, Password, Mobile, Captcha, Submit} = Login;\n\nconst {Header, Content, Footer, Sider} = Layout;\nconst {SubMenu} = Menu;\n\n/**\n * Class to represent the login page\n */\nexport default class Loginpage extends React.Component {\n    state = {\n        notice: '',\n        type: 'tab2',\n        autoLogin: true,\n    };\n\n    /**\n     * Function that executes when login button is clicked\n     * @param err error if any\n     * @param values hash of values that represent the username and password\n     */\n    onSubmit = (err: any, values: { username: string; password: string; }) => {\n        console.log('value collected ->', {\n            ...values,\n            autoLogin: this.state.autoLogin,\n        });\n        if (this.state.type === 'tab1') {\n            this.setState(\n                {\n                    notice: '',\n                },\n                () => {\n                    if (!err && (values.username !== 'admin' || values.password !== '888888')) {\n                        setTimeout(() => {\n                            this.setState({\n                                notice: 'The combination of username and password is incorrect!',\n                            });\n                        }, 500);\n                    }\n                }\n            );\n        }\n    };\n\n    /**\n     * Function called on when a tab is changed\n     * @param key\n     */\n    onTabChange = (key: any) => {\n        this.setState({\n            type: key,\n        });\n    };\n\n    /**\n     * Function changed on auto login\n     * @param e\n     */\n    changeAutoLogin = (e: { target: { checked: any; }; }) => {\n        this.setState({\n            autoLogin: e.target.checked,\n        });\n    };\n\n\n    /**\n     * Overriding Render function\n     */\n    render() {\n        return (\n            <Form\n                {...layout}\n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                onFinishFailed={onFinishFailed}\n            >\n                <Form.Item\n                    label=\"Username\"\n                    name=\"username\"\n                    rules={[{ required: true, message: 'Please input your username!' }]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Please input your password!' }]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item {...tailLayout} name=\"remember\" valuePropName=\"checked\">\n                    <Checkbox>Remember me</Checkbox>\n                </Form.Item>\n\n                <Form.Item {...tailLayout}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    };\n}\n"]},"metadata":{},"sourceType":"module"}