{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/connormentel/Desktop/CS 5500/Project/homepage/src/loginpage.tsx\",\n    _s = $RefreshSig$();\n\nconst initialState = {\n  username: '',\n  password: '',\n  isButtonDisabled: true,\n  helperText: '',\n  isError: false\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'setUsername':\n      return { ...state,\n        username: action.payload\n      };\n\n    case 'setPassword':\n      return { ...state,\n        password: action.payload\n      };\n\n    case 'setIsButtonDisabled':\n      return { ...state,\n        isButtonDisabled: action.payload\n      };\n\n    case 'loginSuccess':\n      return { ...state,\n        helperText: action.payload,\n        isError: false\n      };\n\n    case 'loginFailed':\n      return { ...state,\n        helperText: action.payload,\n        isError: true\n      };\n\n    case 'setIsError':\n      return { ...state,\n        isError: action.payload\n      };\n  }\n};\n\nconst Login = () => {\n  _s();\n\n  const classes = useStyles();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: classes.header,\n        title: \"Login App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            error: state.isError,\n            fullWidth: true,\n            id: \"username\",\n            type: \"email\",\n            label: \"Username\",\n            placeholder: \"Username\",\n            margin: \"normal\",\n            onChange: handleUsernameChange,\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            error: state.isError,\n            fullWidth: true,\n            id: \"password\",\n            type: \"password\",\n            label: \"Password\",\n            placeholder: \"Password\",\n            margin: \"normal\",\n            helperText: state.helperText,\n            onChange: handlePasswordChange,\n            onKeyPress: handleKeyPress\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          size: \"large\",\n          color: \"secondary\",\n          className: classes.loginBtn,\n          onClick: handleLogin,\n          disabled: state.isButtonDisabled,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"6GIWCI0qRXnBuTPj/J1Vi65cn8I=\", true);\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/connormentel/Desktop/CS 5500/Project/homepage/src/loginpage.tsx"],"names":["initialState","username","password","isButtonDisabled","helperText","isError","reducer","state","action","type","payload","Login","classes","useStyles","dispatch","useReducer","container","card","header","handleUsernameChange","handleKeyPress","handlePasswordChange","loginBtn","handleLogin"],"mappings":"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","sourcesContent":["type State = {\n    username: string\n    password:  string\n    isButtonDisabled: boolean\n    helperText: string\n    isError: boolean\n};\n\nconst initialState:State = {\n    username: '',\n    password: '',\n    isButtonDisabled: true,\n    helperText: '',\n    isError: false\n};\n\ntype Action = { type: 'setUsername', payload: string }\n    | { type: 'setPassword', payload: string }\n    | { type: 'setIsButtonDisabled', payload: boolean }\n    | { type: 'loginSuccess', payload: string }\n    | { type: 'loginFailed', payload: string }\n    | { type: 'setIsError', payload: boolean };\n\nconst reducer = (state: State, action: Action): State => {\n    switch (action.type) {\n        case 'setUsername':\n            return {\n                ...state,\n                username: action.payload\n            };\n        case 'setPassword':\n            return {\n                ...state,\n                password: action.payload\n            };\n        case 'setIsButtonDisabled':\n            return {\n                ...state,\n                isButtonDisabled: action.payload\n            };\n        case 'loginSuccess':\n            return {\n                ...state,\n                helperText: action.payload,\n                isError: false\n            };\n        case 'loginFailed':\n            return {\n                ...state,\n                helperText: action.payload,\n                isError: true\n            };\n        case 'setIsError':\n            return {\n                ...state,\n                isError: action.payload\n            };\n    }\n}\n\nconst Login = () => {\n    const classes = useStyles();\n    const [state, dispatch] = useReducer(reducer, initialState);\n    return (\n        <form className={classes.container} noValidate autoComplete=\"off\">\n            <Card className={classes.card}>\n                <CardHeader className={classes.header} title=\"Login App\" />\n                <CardContent>\n                    <div>\n                        <TextField\n                            error={state.isError}\n                            fullWidth\n                            id=\"username\"\n                            type=\"email\"\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            margin=\"normal\"\n                            onChange={handleUsernameChange}\n                            onKeyPress={handleKeyPress}\n                        />\n                        <TextField\n                            error={state.isError}\n                            fullWidth\n                            id=\"password\"\n                            type=\"password\"\n                            label=\"Password\"\n                            placeholder=\"Password\"\n                            margin=\"normal\"\n                            helperText={state.helperText}\n                            onChange={handlePasswordChange}\n                            onKeyPress={handleKeyPress}\n                        />\n                    </div>\n                </CardContent>\n                <CardActions>\n                    <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"secondary\"\n                        className={classes.loginBtn}\n                        onClick={handleLogin}\n                        disabled={state.isButtonDisabled}>\n                        Login\n                    </Button>\n                </CardActions>\n            </Card>\n        </form>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}