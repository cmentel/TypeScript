{"version":3,"sources":["loginpage.tsx","homepage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","container","display","flexWrap","width","margin","spacing","loginBtn","marginTop","flexGrow","header","textAlign","background","color","card","initialState","username","password","isButtonDisabled","helperText","isError","reducer","state","action","type","payload","Login","classes","useReducer","dispatch","useEffect","trim","handleLogin","handleKeyPress","event","keyCode","which","className","noValidate","autoComplete","Card","CardHeader","title","CardContent","TextField","error","fullWidth","id","label","placeholder","onChange","target","value","onKeyPress","CardActions","Button","variant","size","onClick","disabled","Header","Layout","Content","Footer","Sider","SubMenu","Menu","Homepage","collapsed","onCollapse","console","log","setState","this","style","minHeight","collapsible","defaultSelectedKeys","mode","Item","icon","PieChartOutlined","DesktopOutlined","UserOutlined","TeamOutlined","FileOutlined","padding","React","Component","App","ableToLogin","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78a88250.chunk.js","sourcesContent":["import React, {useReducer, useEffect} from 'react';\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\n\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Button from '@material-ui/core/Button';\nimport Homepage from './homepage'\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        container: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            width: 500,\n            margin: `${theme.spacing(0)} auto`\n        },\n        loginBtn: {\n            marginTop: theme.spacing(2),\n            flexGrow: 1\n        },\n        header: {\n            textAlign: 'center',\n            background: '#131c9c',\n            color: '#fff'\n        },\n        card: {\n            marginTop: theme.spacing(10)\n        }\n    })\n);\n\n\ntype State = {\n    username: string\n    password: string\n    isButtonDisabled: boolean\n    helperText: string\n    isError: boolean\n};\n\nconst initialState: State = {\n    username: '',\n    password: '',\n    isButtonDisabled: true,\n    helperText: '',\n    isError: false\n};\n\ntype Action = { type: 'setUsername', payload: string }\n    | { type: 'setPassword', payload: string }\n    | { type: 'setIsButtonDisabled', payload: boolean }\n    | { type: 'loginSuccess', payload: string }\n    | { type: 'loginFailed', payload: string }\n    | { type: 'setIsError', payload: boolean };\n\nconst reducer = (state: State, action: Action): State => {\n    switch (action.type) {\n        case 'setUsername':\n            return {\n                ...state,\n                username: action.payload\n            };\n        case 'setPassword':\n            return {\n                ...state,\n                password: action.payload\n            };\n        case 'setIsButtonDisabled':\n            return {\n                ...state,\n                isButtonDisabled: action.payload\n            };\n        case 'loginSuccess':\n            return {\n                ...state,\n                helperText: action.payload,\n                isError: false\n            };\n        case 'loginFailed':\n            return {\n                ...state,\n                helperText: action.payload,\n                isError: true\n            };\n        case 'setIsError':\n            return {\n                ...state,\n                isError: action.payload\n            };\n    }\n}\n\nconst Login = () => {\n    const classes = useStyles();\n    const [state, dispatch] = useReducer(reducer, initialState);\n\n    useEffect(() => {\n        if (state.username.trim() && state.password.trim()) {\n            dispatch({\n                type: 'setIsButtonDisabled',\n                payload: false\n            });\n        } else {\n            dispatch({\n                type: 'setIsButtonDisabled',\n                payload: true\n            });\n        }\n    }, [state.username, state.password]);\n\n    const handleLogin = () => {\n        if (state.username === 'steve@email.com' && state.password === 'minecraft') {\n            dispatch({\n                type: 'loginSuccess',\n                payload: 'SUCCESS'\n\n            });\n        } else {\n            dispatch({\n                type: 'loginFailed',\n                payload: 'Incorrect username or password'\n            });\n        }\n    };\n\n    const handleKeyPress = (event: React.KeyboardEvent) => {\n        if (event.keyCode === 13 || event.which === 13) {\n            state.isButtonDisabled || handleLogin();\n        }\n    };\n\n    const handleUsernameChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        dispatch({\n            type: 'setUsername',\n            payload: event.target.value\n        });\n    };\n\n    const handlePasswordChange: React.ChangeEventHandler<HTMLInputElement> = (event) => {\n        dispatch({\n            type: 'setPassword',\n            payload: event.target.value\n        });\n    };\n\n    return (\n        <form className={classes.container} noValidate autoComplete=\"off\">\n            <Card className={classes.card}>\n                <CardHeader className={classes.header} title=\"Minecraft Steve's Plagiarism Detector\"/>\n                <CardContent>\n                    <div>\n                        username = steve@email.com\n                        password = minecraft\n                        <TextField\n                            error={state.isError}\n                            fullWidth\n                            id=\"username\"\n                            type=\"email\"\n                            label=\"Username\"\n                            placeholder=\"Username\"\n                            margin=\"normal\"\n                            onChange={handleUsernameChange}\n                            onKeyPress={handleKeyPress}\n                        />\n                        <TextField\n                            error={state.isError}\n                            fullWidth\n                            id=\"password\"\n                            type=\"password\"\n                            label=\"Password\"\n                            placeholder=\"Password\"\n                            margin=\"normal\"\n                            helperText={state.helperText}\n                            onChange={handlePasswordChange}\n                            onKeyPress={handleKeyPress}\n                        />\n                    </div>\n                </CardContent>\n                <CardActions>\n                    <Button\n                        variant=\"contained\"\n                        size=\"large\"\n                        color=\"secondary\"\n                        className={classes.loginBtn}\n                        onClick={handleLogin}\n                        disabled={state.isButtonDisabled}>\n                        Login\n                    </Button>\n                </CardActions>\n            </Card>\n        </form>\n    );\n}\n\nexport default Login;","import { Layout, Menu, Breadcrumb } from 'antd';\nimport {\n    DesktopOutlined,\n    PieChartOutlined,\n    FileOutlined,\n    TeamOutlined,\n    UserOutlined,\n} from '@ant-design/icons';\nimport React from \"react\";\n\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nclass Homepage extends React.Component {\n    state = {\n        collapsed: false,\n    };\n\n    onCollapse = (collapsed: any) => {\n        console.log(collapsed);\n        this.setState({ collapsed });\n    };\n\n    render() {\n        const { collapsed } = this.state;\n        return (\n            <Layout style={{ minHeight: '100vh' }}>\n                <Sider collapsible collapsed={collapsed} onCollapse={this.onCollapse}>\n                    <div className=\"logo\" />\n                    <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                        <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\n                            Option 1\n                        </Menu.Item>\n                        <Menu.Item key=\"2\" icon={<DesktopOutlined />}>\n                            Option 2\n                        </Menu.Item>\n                        <SubMenu key=\"sub1\" icon={<UserOutlined />} title=\"User\">\n                            <Menu.Item key=\"3\">Tom</Menu.Item>\n                            <Menu.Item key=\"4\">Bill</Menu.Item>\n                            <Menu.Item key=\"5\">Alex</Menu.Item>\n                        </SubMenu>\n                        <SubMenu key=\"sub2\" icon={<TeamOutlined />} title=\"Team\">\n                            <Menu.Item key=\"6\">Team 1</Menu.Item>\n                            <Menu.Item key=\"8\">Team 2</Menu.Item>\n                        </SubMenu>\n                        <Menu.Item key=\"9\" icon={<FileOutlined />}>\n                            Files\n                        </Menu.Item>\n                    </Menu>\n                </Sider>\n                <Layout className=\"site-layout\">\n                    <Header className=\"site-layout-background\" style={{ padding: 0 }} />\n                    <Content style={{ margin: '0 16px' }}>\n                        <Breadcrumb style={{ margin: '16px 0' }}>\n                            <Breadcrumb.Item>User</Breadcrumb.Item>\n                            <Breadcrumb.Item>Bill</Breadcrumb.Item>\n                        </Breadcrumb>\n                        <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\n                            Bill is a cat.\n                        </div>\n                    </Content>\n                    <Footer style={{ textAlign: 'center' }}>Ant Design ©2018 Created by Ant UED</Footer>\n                </Layout>\n            </Layout>\n        );\n    }\n}\n\nexport default Homepage;","import React from 'react';\nimport './App.css';\nimport Loginpage from \"./loginpage\";\nimport Homepage from \"./homepage\";\n\n\nfunction App(this: any) {\n    let ableToLogin = false\n\n    if (ableToLogin) {\n        return (\n            <Homepage/>\n        );\n    } else {\n        ableToLogin = true\n        return (\n            <Loginpage/>\n        );\n    }\n\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}